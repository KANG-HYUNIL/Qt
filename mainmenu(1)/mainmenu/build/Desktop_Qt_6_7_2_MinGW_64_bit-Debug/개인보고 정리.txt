3. 개요 설계
항목의 설계(시스템, 데이터베이스 설계 등), 사용 기술, 핵심 기능 등의 묘사
실제 코드에 사용된 기술(tcp, socket, read 등)을 설명하며, 데이터베이스의 설정 구조, 핵심 기능에 대해 설명 필요.
우선 4번의 스크린샷을 찍으며 단계별로 설명을 적고, 기능적 부분이나 기술적 부분을 3번으로 옮겨야 함.
 

4. 실현 방법
핵심 기능 실현 묘사, 핵심 코드 및 실현 결과. 프로그램 실행 시 각 단계별로 스크린샷(jpg)을 찍고 설명.

채팅 어플리케이션 시스템의 설계는 이러한 형태로 되어 있다. 처음 채팅 어플리케이션을 기동하면,
로그인과 회원가입을 할 수 있는 화면이 나온다. 회원가입 시 사용자가 작성한 이름과 비밀번호 정보를 담아
서버로 회원가입 요청을 전송하며, 서버는 요청을 받은 후 사용자의 데이터를 저장해 데이터베이스에 저장한다.
이 때 각 사용자별로 고유의 id를 만들어 같이 데이터베이스에 저장한다. 사용자 정보를 저장하는 테이블은
id, name, password, ip, islogin 을 attribute로 가지고 있으며, id를 pk로 사용한다. 성공적으로 서버에 요청을
전달해 서버가 데이터베이스에 저장 후 사용자에게 저장 성공 응답을 보내면, 다시 로그인을 하는 화면으로 돌아간다.
만약 이 때 서버에 연결할 수 없거나 데이터가 정상적으로 데이터베이스에 저장되지 않았다면, 유저 화면에 경고창을 띄우며
회원가입에 실패했음을 알린다. 로그인도 이와 마찬가지로 사용자가 입력한 이름과 비밀번호 정보를 서버로 보내, 서버가
요청을 받고 데이터베이스를 조회해 올바른 회원정보를 입력했다면 로그인 성공 응답을 클라이언트에게 보내준다.
이 응답을 받고 사용자의 화면은 메인화면으로 넘어가며, 만약 사용자의 정보가 틀렸거나 서버에 접속할 수 없다면
이 때에도 경고문을 띄워서 로그인에 실패했음을 알려준다. 메인 화면으로 들어오면, 서버에 친구 목록을 가져오는 요청을 보내고,
서버가 정상적으로 응답 시 친구 목록 리스트를 갱신하고, 받은 메세지나 파일이 있는지에 대한 정보도 친고 목록 리스트에
같이 보여준다. 친구 추가 버튼을 통해 다른 사용자를 친구로 추가할 수 있다. 친구 추가 요청을 서버로 보내면, 서버는 그 이름에
해당하는 사용자가 있는지 데이터베이스를 조회하고, 존재한다면 친구 추가 성공 응답을, 아니라면 사용자가 존재하지 않는다는
응답을 전달해준다. 다른 사용자와 채팅방을 만들면, 사용자끼리의 대화 내역을 저장할 테이블을 생성해 데이터베이스에 저장한다.
모든 채팅 내역은 데이터베이스에 보낸 시간, 보낸 사람, 보낸 내용의 형태로 저장되며, 이를 통해 사용자 화면에 채팅 기록들을
표시할 수 있다. 다른 사용자를 친구 목록에서 삭제 시 친구 목록 삭제 요청을 서버로 보내, 사용자의 친구 목록 데이터베이스에서 
다른 사용자를 삭제하고, 친구 목록 삭제 완료 응답을 사용자에게 돌려준다. 파일 전송도 이와 비슷한 구조로 이루어져 진행된다.
사용자가 다른 사용자를 서낵하고 파일 전송 버튼을 누르면, 파일 전송 화면을 생성하며 전송하려는 파일을 선택하게 한다.
파일 선택 후 전송을 누르면 파일 전송만을 위한 tcp 서버를 새로 생성하며, 파일을 바이트 단위로 서버에 전송한다. 파일을 받을
다른 사용자가 서버에 접속하면, 자신한테 온 파일이 있는지 확인한 후 있으면 사용자에게 알려줘서 파일을 내려받을 수 있다고 인지시킨다.
파일 내려받기 버튼을 누르면 파일을 내려받기 위한 tcp socket을 생성한다. 우선 받을 파일의 이름과 크기 정보를 받고, 파일을 일정 단위
만큼 읽으며 내려받는다. 파일을 전부 내려받으면 사용자에게 내려받은 파일의 위치를 지정할 수 있도록 한다. 이러한 형태로 통신
어플리케이션의 기본적인 기능을 실현시킨다.3. 개요 설계
항목의 설계(시스템, 데이터베이스 설계 등), 사용 기술, 핵심 기능 등의 묘사
실제 코드에 사용된 기술(tcp, socket, read 등)을 설명하며, 데이터베이스의 설정 구조, 핵심 기능에 대해 설명 필요.
우선 4번의 스크린샷을 찍으며 단계별로 설명을 적고, 기능적 부분이나 기술적 부분을 3번으로 옮겨야 함.
 

4. 실현 방법
핵심 기능 실현 묘사, 핵심 코드 및 실현 결과. 프로그램 실행 시 각 단계별로 스크린샷(jpg)을 찍고 설명.

채팅 어플리케이션 시스템의 설계는 이러한 형태로 되어 있다. 처음 채팅 어플리케이션을 기동하면,
로그인과 회원가입을 할 수 있는 화면이 나온다. 회원가입 시 사용자가 작성한 이름과 비밀번호 정보를 담아
서버로 회원가입 요청을 전송하며, 서버는 요청을 받은 후 사용자의 데이터를 저장해 데이터베이스에 저장한다.
이 때 각 사용자별로 고유의 id를 만들어 같이 데이터베이스에 저장한다. 사용자 정보를 저장하는 테이블은
id, name, password, ip, islogin 을 attribute로 가지고 있으며, id를 pk로 사용한다. 성공적으로 서버에 요청을
전달해 서버가 데이터베이스에 저장 후 사용자에게 저장 성공 응답을 보내면, 다시 로그인을 하는 화면으로 돌아간다.
만약 이 때 서버에 연결할 수 없거나 데이터가 정상적으로 데이터베이스에 저장되지 않았다면, 유저 화면에 경고창을 띄우며
회원가입에 실패했음을 알린다. 로그인도 이와 마찬가지로 사용자가 입력한 이름과 비밀번호 정보를 서버로 보내, 서버가
요청을 받고 데이터베이스를 조회해 올바른 회원정보를 입력했다면 로그인 성공 응답을 클라이언트에게 보내준다.
이 응답을 받고 사용자의 화면은 메인화면으로 넘어가며, 만약 사용자의 정보가 틀렸거나 서버에 접속할 수 없다면
이 때에도 경고문을 띄워서 로그인에 실패했음을 알려준다. 메인 화면으로 들어오면, 서버에 친구 목록을 가져오는 요청을 보내고,
서버가 정상적으로 응답 시 친구 목록 리스트를 갱신하고, 받은 메세지나 파일이 있는지에 대한 정보도 친고 목록 리스트에
같이 보여준다. 친구 추가 버튼을 통해 다른 사용자를 친구로 추가할 수 있다. 친구 추가 요청을 서버로 보내면, 서버는 그 이름에
해당하는 사용자가 있는지 데이터베이스를 조회하고, 존재한다면 친구 추가 성공 응답을, 아니라면 사용자가 존재하지 않는다는
응답을 전달해준다. 다른 사용자와 채팅방을 만들면, 사용자끼리의 대화 내역을 저장할 테이블을 생성해 데이터베이스에 저장한다.
모든 채팅 내역은 데이터베이스에 보낸 시간, 보낸 사람, 보낸 내용의 형태로 저장되며, 이를 통해 사용자 화면에 채팅 기록들을
표시할 수 있다. 다른 사용자를 친구 목록에서 삭제 시 친구 목록 삭제 요청을 서버로 보내, 사용자의 친구 목록 데이터베이스에서 
다른 사용자를 삭제하고, 친구 목록 삭제 완료 응답을 사용자에게 돌려준다. 파일 전송도 이와 비슷한 구조로 이루어져 진행된다.
사용자가 다른 사용자를 서낵하고 파일 전송 버튼을 누르면, 파일 전송 화면을 생성하며 전송하려는 파일을 선택하게 한다.
파일 선택 후 전송을 누르면 파일 전송만을 위한 tcp 서버를 새로 생성하며, 파일을 바이트 단위로 서버에 전송한다. 파일을 받을
다른 사용자가 서버에 접속하면, 자신한테 온 파일이 있는지 확인한 후 있으면 사용자에게 알려줘서 파일을 내려받을 수 있다고 인지시킨다.
파일 내려받기 버튼을 누르면 파일을 내려받기 위한 tcp socket을 생성한다. 우선 받을 파일의 이름과 크기 정보를 받고, 파일을 일정 단위
만큼 읽으며 내려받는다. 파일을 전부 내려받으면 사용자에게 내려받은 파일의 위치를 지정할 수 있도록 한다. 이러한 형태로 통신
어플리케이션의 기본적인 기능을 실현시킨다.